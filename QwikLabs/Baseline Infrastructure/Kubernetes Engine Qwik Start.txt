Kubernetes Engine: Qwik Start

Google Kubernetes Engine provides a managed environment for deploying, managing, and scaling your containerized applications using Google infrastructure.
The environment Kubernetes Engine provides consists of multiple machines (specifically, Google Compute Engine instances) grouped together to form a container cluster.

Cluster orchestration with Kubernetes Engine
Kubernetes Engine clusters are powered by the Kubernetes open source cluster management system.
Kubernetes provides the mechanisms through which you interact with your container cluster.
You use Kubernetes commands and resources to deploy and manage your applications, perform administration tasks and set policies, and monitor the health of your deployed workloads.

Kubernetes draws on the same design principles that run popular Google services and provides the same benefits:
	automatic management, monitoring and liveness probes for application containers, automatic scaling, rolling updates, and more.
When you run your applications on a container cluster, you're using technology based on Google's 10+ years of experience running production workloads in containers.

Kubernetes on Google Cloud Platform
When you run a Kubernetes Engine cluster, you also gain the benefit of advanced cluster management features that Google Cloud Platform provides.
These include:
 - Google Cloud Platform's load-balancing for Compute Engine instances
 - Node Pools to designate subsets of nodes within a cluster for additional flexibility
 - Automatic scaling of your cluster's node instance count
 - Automatic upgrades for your cluster's node software
 - Node auto-repair to maintain node health and availability
 - Logging and Monitoring with Stackdriver for visibility into your cluster

gcloud is the powerful and unified command-line tool for Google Cloud Platform

Your compute zone is an approximate regional location in which your clusters and their resources live. 

A cluster consists of at least one cluster master machine and multiple worker machines called nodes.
Nodes are Compute Engine virtual machine (VM) instances that run the Kubernetes processes necessary to make them part of the cluster.

-----

google241843_student@qwiklabs-gcp-708dcb72e3b302f7:~$ gcloud auth list
			  Credentialed Accounts
	ACTIVE  ACCOUNT
	*       google241843_student@qwiklabs.net
	To set the active account, run:
		$ gcloud config set account `ACCOUNT`

google241843_student@qwiklabs-gcp-708dcb72e3b302f7:~$ gcloud config list project
	[core]
	project = qwiklabs-gcp-708dcb72e3b302f7
	Your active configuration is: [cloudshell-16707]

google241843_student@qwiklabs-gcp-708dcb72e3b302f7:~$ gcloud config set project qwiklabs-gcp-708dcb72e3b302f7
	Updated property [core/project].

google241843_student@qwiklabs-gcp-708dcb72e3b302f7:~$ gcloud config set compute/zone us-west1-a
	Updated property [compute/zone].

google241843_student@qwiklabs-gcp-708dcb72e3b302f7:~$ gcloud container clusters create fpkcluster
	WARNING: Starting in Kubernetes v1.10, new clusters will no longer get compute-rw and storage-ro scopes added to what is specified in --scopes (though the latter will remain included in the default --scopes). To use these scopes, add them explicitly to --scopes. To use the new behavior, set container/new_scopes_behavior property (gcloud config set container/new_scopes_behavior true).
	Creating cluster fpkcluster...done.
	Created [https://container.googleapis.com/v1/projects/qwiklabs-gcp-708dcb72e3b302f7/zones/us-west1-a/clusters/fpkcluster].
	To inspect the contents of your cluster, go to: https://console.cloud.google.com/kubernetes/workload_/gcloud/us-west1-a/fpkcluster?project=qwiklabs-gcp-708dcb72e3b302f7
	kubeconfig entry generated for fpkcluster.
	NAME        LOCATION    MASTER_VERSION  MASTER_IP      MACHINE_TYPE   NODE_VERSION  NUM_NODES  STATUS
	fpkcluster  us-west1-a  1.8.7-gke.1     35.185.208.28  n1-standard-1  1.8.7-gke.1   3          RUNNING
	
google241843_student@qwiklabs-gcp-708dcb72e3b302f7:~$ gcloud container clusters get-credentials fpkcluster
	Fetching cluster endpoint and auth data.
	kubeconfig entry generated for fpkcluster.

google241843_student@qwiklabs-gcp-708dcb72e3b302f7:~$ kubectl run hello-server --image=gcr.io/google-samples/hello-app:1.0 --port 8080
	deployment "hello-server" created

google241843_student@qwiklabs-gcp-708dcb72e3b302f7:~$ kubectl expose deployment hello-server --type="LoadBalancer"
	service "hello-server" exposed

google241843_student@qwiklabs-gcp-708dcb72e3b302f7:~$ kubectl get service hello-server
	NAME           TYPE           CLUSTER-IP     EXTERNAL-IP   PORT(S)          AGE
	hello-server   LoadBalancer   10.19.250.21   <pending>     8080:31295/TCP   25s

google241843_student@qwiklabs-gcp-708dcb72e3b302f7:~$ kubectl get service hello-server
	NAME           TYPE           CLUSTER-IP     EXTERNAL-IP     PORT(S)          AGE
	hello-server   LoadBalancer   10.19.250.21   35.203.188.52   8080:31295/TCP   47s

http://35.203.188.52:8080/






























































